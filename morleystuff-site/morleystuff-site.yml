AWSTemplateFormatVersion: "2010-09-09"

# Parameters to specify github repo
Parameters:
  GithubOwner:
    Type: String
    Default: morley-stuff
    Description: "Github repo owner"
  GithubRepo:
    Type: String
    Default: morleystuff-site
    Description: "Github repo name"
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token"

# Pipeline to build and deploy to s3 bucket
Resources:
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                -
                  Name: MorleyStuff-Site
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: master
                OAuthToken: !Ref GithubOAuthToken
        -
          Name: Build
          Actions:
            -
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: MorleyStuff-Site
              OutputArtifacts:
                -
                  Name: MorleyStuff-Site-Build
              Configuration:
                ProjectName: !Ref CodeBuild

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"

  PipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}

  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: MorleyStuff-Site-Pipeline
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:4.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 10
            pre_build:
              commands:
                - echo Installing source dependencies...
                - npm install
            build:
              commands:
                - echo Build started on `date`
                - npm run build
            post_build:
              commands:
                - aws s3 cp --recursive --acl public-read ./build s3://${DeployBucket}/
                - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://${DeployBucket}/
                - aws cloudfront create-invalidation --distribution-id ${MorleyStuffCloudFront} --paths /index.html /service-worker.js
          artifacts:
            files:
              - '**/*'
            base-directory: build

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt DeployBucket.Arn
                  - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"

  DeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
        
  MorleyStuffCloudFront:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - 'morleystuff.com'
          - '*.morleystuff.com'
        ViewerCertificate:
          AcmCertificateArn: 'arn:aws:acm:us-east-1:365033114011:certificate/9f4ffc76-18d3-41e8-ba82-1aca7cc12ebf'
          SslSupportMethod: 'sni-only'
        Origins:
          -
            DomainName: !GetAtt DeployBucket.DomainName
            Id: !Ref DeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
          ErrorCachingMinTTL: '30'
        - ErrorCode: '404'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
          ErrorCachingMinTTL: '30'
        DefaultCacheBehavior:
          MinTTL: 86400    # 1 day
          MaxTTL: 31536000 # 1 year
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref DeployBucket
          ViewerProtocolPolicy: "redirect-to-https"

  MorleyStuffDNS:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: ZT0O09PTBTJOV
      RecordSets:
        - Name: morleystuff.com
          Type: A
          AliasTarget:
            DNSName: !GetAtt
              - MorleyStuffCloudFront
              - DomainName
            HostedZoneId: Z2FDTNDATAQYW2
